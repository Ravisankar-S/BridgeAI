version: '3.8'

services:
  # MCP Gateway - Network-aware routing
  mcp-gateway:
    build:
      context: ./mcp-gateway
      dockerfile: Dockerfile
    container_name: bridgeai-mcp-gateway
    ports:
      - "8080:8080"
    environment:
      - CEREBRAS_API_KEY=${CEREBRAS_API_KEY}
    networks:
      - bridgeai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Backend - FastAPI with local model
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bridgeai-backend
    ports:
      - "8000:8000"
    volumes:
      # Mount the GGUF model from host
      - ./models:/app/models:ro
    environment:
      - MCP_GATEWAY_URL=http://mcp-gateway:8080
      - MODEL_PATH=/app/models/llama-2-7b-chat.Q4_K_M.gguf
      - CEREBRAS_API_KEY=${CEREBRAS_API_KEY:-}
    depends_on:
      mcp-gateway:
        condition: service_healthy
    networks:
      - bridgeai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8000/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend - React with Vite
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bridgeai-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE=http://localhost:8000/api
      - VITE_MCP_GATEWAY=http://localhost:8080
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bridgeai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  bridgeai-network:
    driver: bridge
    name: bridgeai-network

# Volume for persistent data (optional)
volumes:
  models:
    driver: local
